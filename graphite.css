:root {
    --commutative-spread: 0.5rem;
    --associative-spread: 1.5rem;
    --distributive-spread: 4.5rem;
    --glyph-color: #343a40;
    --space-color: #f8f9fa;
}

blockquote,dl,dd,fieldset,figure,h1,h2,h3,h4,h5,h6,input,ol,p,ul {
    margin: 0;
}

address,aside,body,header,footer,main,nav,section {
    display: flex;
}

blockquote {
    font-style: italic;
}

aside,header,footer,section,main {
    flex-direction: column;
    justify-content: space-around;
}
address,body,nav {
    flex-wrap: wrap;
    justify-content: center;
}

address, nav {
    gap: var(--commutative-spread);
}

body>:is(header, footer) {
    flex: 100%;
}

body>header {
    align-self: end;
    margin-block-start: var(--associative-spread);
}

body>footer {
    align-self: start;
    margin-block-end: var(--associative-spread);

}


br+* {
    display: inline-block;
    margin-block-start: var(--commutative-spread);
}



dt, legend,legend>label {
    font-weight: bold;
}

fieldset,button {
    padding: 0;
}

dl, fieldset, form {
    text-align: start;
}

figcaption:first-child {
    margin-block-end: var(--commutative-spread);
}

figcaption:last-child,li+li,dt+dt,dd+dd,option+option {
    margin-block-start: var(--commutative-spread);
}

ol>li+li,dd+dt,dt+dd {
    margin-block-start: var(--associative-spread);
}

[open]>summary,legend {
    margin-block-end: var(--associative-spread);
}

body {
    align-items: center;
    margin: env(safe-area-inset-top, unset) env(safe-area-inset-right, unset) env(safe-area-inset-bottom, unset) env(safe-area-inset-left, unset);
    font-family: cursive;
    color: var(--glyph-color);
    background-color: var(--space-color);
    text-align: center;
    gap: var(--distributive-spread);
}

aside,header,footer,main,section {
    gap: var(--associative-spread);
}

:any-link, button {
    color: currentColor;;
    display: inline-block;
}

blockquote,
details {
    max-width: fit-content;
}

fieldset, iframe,button {
    border: none;
}

button:active {
    border-style: inset;
}

mark {
    background-color: var(--glyph-color);
    color: var(--space-color);
}

:target {
    filter: drop-shadow(0 0 0.0625rem var(--glyph-color));
}

label {
    font-weight: initial;
}

summary,button {
    text-decoration: underline;
}

button {
    background-color: inherit;
}

button,option {
    font-family: inherit;
    font-size: 1em;
    text-align: inherit;
}

iframe {
    display: block;
}